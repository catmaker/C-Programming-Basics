#include <iostream>
// iostream.h 파일을 불러와서
// 해당안에 구현되어있는 여러가지 명령어들을
// 사용할 수 있도록 도와준다.

int main()
{
	std::cout << "안녕하세요." << std::endl;
	std::cout << "저는 신지수 입니다.\n"; // 컴파일러는 소스코드랑 글자랑 구분을 할 수가 없음 그래서 큰 따옴표 안에 입력을 해줘야한다.

	std::cout << 123123 << std::endl; 

	// 숫자를 저장하고 저장된 숫자를 계산하고 그 저장된 숫자를 출력한다.
	// 메모리 (Ram)
	// 변수란? 숫자나 글자 같은 값을 컴퓨터 안에 저장하는 공간 (박스)
	// 박스를 만들 때 이름을 정해줘야 한다.

	// 변수를 만드는 방법
	int a; // 숫자형 데이터를 저장하는 변수 (변수를 선언한다.)
	a = 10; // = 는 같다가 아니다. 대입 연산자 오른쪽에 있는 값을 왼쪽으로 넣는다.

	int b = 10; // 변수를 선언과 동시에 10으로 초기화한다.

	// c =10; // 위에서부터 한 줄씩 실행되기 때문에 c라는 공간이 만들어지기 전이기 때문에 버그 발생이 된다.
	// int c;

	// int a = 5; // 이미 a라는게 만들어져 있기 때문에 같은 이름의 변수 이름은 존재할 수 없다.
	
	int c = a + b; // 일반적으로 활용하는 사칙연산도 사용이 가능하다.


	int d = 200 / 100; // 몫 2
	d = 203 % 100; // 나머지 3

	std::cout << c;

	// 디버깅을 하는 이유
	// 이 기능으로 버그를 찾아낼 수 있고 프로그램의 실행순서 파악이 수월해진다. 소스코드가 복잡해지면 버그를 찾기가 어려워지기 때문ㅇ에 소스코드를 한줄씩 실행해보는게 좋다.

	std::cout << d;

	
	return 0;
}
